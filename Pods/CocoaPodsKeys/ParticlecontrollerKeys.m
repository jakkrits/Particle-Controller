//
// Generated by CocoaPods-Keys
// on 19/03/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "ParticlecontrollerKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation ParticlecontrollerKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(ParticlecontrollerKeys *, SEL) = NULL;

  if ([key isEqualToString:@"oAuthClientId"]) {
    implementation = _podKeys5db47ca19f1da96a97740db1d7baaf86;
  }

  if ([key isEqualToString:@"oAuthSecret"]) {
    implementation = _podKeys1a06c62aaa643af1fb75286280c70551;
  }

  if ([key isEqualToString:@"particleUserName"]) {
    implementation = _podKeys8706655c4845b22448a26b00ef43e9a3;
  }

  if ([key isEqualToString:@"particlePassword"]) {
    implementation = _podKeys9aa6b1775988032fc1f61775a977142b;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys5db47ca19f1da96a97740db1d7baaf86(ParticlecontrollerKeys *self, SEL _cmd)
{
  
    
      char cString[15] = { ParticlecontrollerKeysData[2793], ParticlecontrollerKeysData[2925], ParticlecontrollerKeysData[1182], ParticlecontrollerKeysData[97], ParticlecontrollerKeysData[1622], ParticlecontrollerKeysData[434], ParticlecontrollerKeysData[251], ParticlecontrollerKeysData[1880], ParticlecontrollerKeysData[493], ParticlecontrollerKeysData[1283], ParticlecontrollerKeysData[2423], ParticlecontrollerKeysData[822], ParticlecontrollerKeysData[579], ParticlecontrollerKeysData[327], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys1a06c62aaa643af1fb75286280c70551(ParticlecontrollerKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { ParticlecontrollerKeysData[2357], ParticlecontrollerKeysData[348], ParticlecontrollerKeysData[1366], ParticlecontrollerKeysData[1967], ParticlecontrollerKeysData[3119], ParticlecontrollerKeysData[682], ParticlecontrollerKeysData[1852], ParticlecontrollerKeysData[336], ParticlecontrollerKeysData[2814], ParticlecontrollerKeysData[1442], ParticlecontrollerKeysData[2429], ParticlecontrollerKeysData[931], ParticlecontrollerKeysData[1005], ParticlecontrollerKeysData[597], ParticlecontrollerKeysData[2876], ParticlecontrollerKeysData[1241], ParticlecontrollerKeysData[1897], ParticlecontrollerKeysData[1848], ParticlecontrollerKeysData[2617], ParticlecontrollerKeysData[525], ParticlecontrollerKeysData[994], ParticlecontrollerKeysData[2372], ParticlecontrollerKeysData[476], ParticlecontrollerKeysData[1599], ParticlecontrollerKeysData[1664], ParticlecontrollerKeysData[877], ParticlecontrollerKeysData[641], ParticlecontrollerKeysData[1191], ParticlecontrollerKeysData[2023], ParticlecontrollerKeysData[2264], ParticlecontrollerKeysData[1658], ParticlecontrollerKeysData[1840], ParticlecontrollerKeysData[1729], ParticlecontrollerKeysData[3079], ParticlecontrollerKeysData[872], ParticlecontrollerKeysData[2027], ParticlecontrollerKeysData[106], ParticlecontrollerKeysData[2939], ParticlecontrollerKeysData[1571], ParticlecontrollerKeysData[2304], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys8706655c4845b22448a26b00ef43e9a3(ParticlecontrollerKeys *self, SEL _cmd)
{
  
    
      char cString[19] = { ParticlecontrollerKeysData[1541], ParticlecontrollerKeysData[1958], ParticlecontrollerKeysData[951], ParticlecontrollerKeysData[1481], ParticlecontrollerKeysData[683], ParticlecontrollerKeysData[764], ParticlecontrollerKeysData[553], ParticlecontrollerKeysData[2216], ParticlecontrollerKeysData[1697], ParticlecontrollerKeysData[728], ParticlecontrollerKeysData[1905], ParticlecontrollerKeysData[1178], ParticlecontrollerKeysData[82], ParticlecontrollerKeysData[1268], ParticlecontrollerKeysData[2141], ParticlecontrollerKeysData[80], ParticlecontrollerKeysData[1389], ParticlecontrollerKeysData[1081], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys9aa6b1775988032fc1f61775a977142b(ParticlecontrollerKeys *self, SEL _cmd)
{
  
    
      char cString[10] = { ParticlecontrollerKeysData[2830], ParticlecontrollerKeysData[702], ParticlecontrollerKeysData[475], ParticlecontrollerKeysData[1258], ParticlecontrollerKeysData[440], ParticlecontrollerKeysData[265], ParticlecontrollerKeysData[2192], ParticlecontrollerKeysData[224], ParticlecontrollerKeysData[1460], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char ParticlecontrollerKeysData[3134] = "/sXqyQf3WEXLVqpyGWus3Sp1yC7yDBo7kv2N/RaPXfqP3znUJoYDh03S/cWp/yI4lUEgsU/niHF8e20ScJiSY1ZHHaVyxmfE9rNtjulo4P3bkDLUpl13ic1GEyZL4OXd9lyWyxgS2dbRFFeAvomODBI9Q20F4LDdzwsuuWOjoF4Z9NeaVcltdsRlCebN6ud6rkMZ1nrBgnaqT2THstXjUmmt7//Y3z4l9hprJ4nk5V71BX0x7x7RDLw2qIEc2xLxZsWfDENn31fTz8DKKNVcfDvqobmqVbbqGjRV/32khqovUbZJBt8AvuyMT2t4o5Kr1z4zVTO5IYMV6NjBavMB/1hvZGRI33L60oA2TZ+QpelZ62Vlb1Mh+rs+OjNQsMEYN5YurD8ERX9HJOI7QgIRBrQIZabdRwLxQjDHWaG8BAmyHF1vPoi3ekic5XK093XM1yG5bjncYB6n2l7sE4k6SbwQRud49pVX4CaLH2fq/AiJ5eIM3Ix+3xjdHGL2dPNg2hwAT6IPC/zIceHx6/E1v9i9MVVlDioKsiLCxZjpFaNOS8TsuwNg31K7/SPg1r3Zo7B9QA7UVPs7D2YYIKK4Y6y+s1miYSyd26yP1JRV62rK5GSfDvvT+1LvVLAay+JXX3hUTR0HyUzzlwuWDNDAN0b+qc40Cii7v+Vv30CVWq2oUMnjfAIMHnr80iUnz+4xL/kCLTPEDrRxWFy1yH4+0pKJg8GS7mhumVgDkxklmv5tLEcqCTqot8bvaKKumZ05ih9iDSqZqTIVVSID5DsFPxdX9UwxnTJaWR7239jzZ6hYcXwh8zCW363Nrk8QoCJW6Xz0he9OQmelFcDIM5E/zrSwXW39/Yoo/jwufb/F2yelodVShFoVX77z8zO6cPlefijBrX+V0J9EllSTcYZf7WMYBSX0p9CJrbj6dgOgaINOfpUyOv8Dc0QeOo3UFVd7t1a7pRPuecchItnEqWKSWRXThC+bkTHYr4buzo+/SFt9b1KlJRFMzE6ZDkeTcDQzPNAesHja0IFNQCNR+cioZQ886O8XYdFH/Wmi8T0T1+/kvNHLrgMaqifymmyYsMsjuOH9iCQmHHQEdvAdnq4bilnMMdTKeKuui7lmOJLT74b1WqWRmBjiXGEwwS/N/gOpYbdvHJcyjfCQ3cFkldz3fNDc1UaZdqalVMPSdl06KTei1Bfd2ChWhxNsYxob9XwXiH7R5Qg36ghrCnc/wy28SqN/83RVx4QwJtZCnNPDgI2eA7ybC20ZlgazaEJKTVRnWIq-/ENiJruOY0VCgpqYrLizbpOh6G9fSgxEgHNxv1CMk1SdxrUvA6/fPfhZpGxGTVyTVgsukqMSuZFrUadz3cbKPu773vZqy/XFdO+4nGC95oLtJBK4UY2uSETmy4062CZiLHcHAFIRjVKrhY54BZa3OREx29UepA0cn2Bn028uG1E7qlEw4vdfgHVM4h+8hzGpeJtJirxQrV5+NAhHB2fJKdj62ZsR0x1s1mrJ7fDD0E55gKuebicEiIRnCq7PYLzpcihLVFsRSScrvUr3vGRvIY6AmZfJ5GN23131HUDWSx+AL+sYjSWqKOWoN8m4rMrt5tTpCxV60iz5UzV0NEteOr5HoCla/RD6A/LuGTlpm2pP2Ab8Lvld4g61OIoQ10XUWGRTN9QL8NLwKG7LTHF7c/SrYsJKG@V23RjRP0LlXMAeETiz609o3BbUwOFKpccUWw+2nG+BGWdL9CIIrRXxThJMmGkTpEaZ0DMvne39rdvascCxcYeulaY2Ix39TLyrYtAhRcwq00D6XXHGusOW/XXlBJmnjkZwaz0EWjG0O82c7j5GOH9ybFKja/GxsC8W0GiyNK2ZSuYK7buPF1RmluMKgsQWH67ADg3QY3pLu7Xh3mwPrF3+LyBY/aWgw67RrBHsURoMVDV30yb9wGY3wVKzobJjzBqszUzc2lRNbDt7Ri63diFNWd5KTMjK7Rk2L1NzD3ggJWlyMjk/+Dc2KOBOLaDkdplJt8u6cI496kD0rNCJ7iHe9FHLqfoIuICRQTJjxcxP1po0Cb9oAY4jCJB18QoGOWVkqkpazq6njuu3Dvkjppez2oDufsU1O/S0AzTVCVpnp29nOWHrYGxriNgZh./YT+vXts7i17E2MIf6abon9CCRZ0bADQMsnzvdPijpZ71oEsaO9BQdlHp0KlTLZVFAGar547XXnGr+Ubro8IOwmasliX71ZAJp0EFn6m60zLnY6SP+F1J8I5pUd7ieKiVNDBW4HAHq3+7/HIW2Ee6FyoPJQiBZ6K0j96B/IK/JX8RabXVmxG2d6FBpW/K9A2eCrkShiYXqt4gMczp4ft2xKawi6Hrt1jnwdX979ivddN0xjyjILYnY9/bhW2xw2kja9w6oc/TlSNihIQ3jQys44LX8ORb1f3IFDlLswP4x0AqCAl8XHNgpClY1pyGDlg9MmAln+TAx7gYmFLmFoHE0htMzPKwP/K3BpIOHweW84x0au/LY0GE+IlOOTbx3MEkGKNSooU9hFyW+fpNZuZqiomPk5/da3+KCfP4f3FC8G91SeN1jvtjupi6WmS6m4AN9KM9gjTRMRNNfoKw+SE8KKGXuedTqRmGc19MphuUZuQ8yaG1p7//eJXVarNCtukJgMxndGfKnQZIdbNNZMFXTxhh3WI19UwwvYoqq/FYvgwJl41ZD0QB+l1oBKw8er9V0RhLYtCa/WorGqmHTGmoECmV2otfouImTgSs3GUvA7jyfOwyuJmPBdXIhp4dDTOJtkrkRtITfWiZwFuXXPjjZQjavv22S2c3RtGnRhIt6Lf2hba0tpHfzTpCcVZZ3eZ5dQbMm9iXBnSmYRhp2dp3/f0C7U7GX9KC3C0Gg47NfcB6RDJMX31JLALLnaWXCexnA7E8aId1NALqLOpo6HP+ATHUCQ+5d4laNeiVl9JGl0ELPY2X1+2rkzYPYBaQo4wFaW13DNrKze/og+pmpojSFcWh4C+OfRRU5DdEpwgZYC/NS70xzP67lkVK+zBq0w0fpL4eh0VuUyNx3l9UTSQ/oZc7tx+vhbsxs7hmS1blaN26qXO2BygcrNhUWXcFpT28MLPBw4eaS8c+JHav5UwuYfAhGhOdy\\\"";

- (NSString *)description
{
  return [@{
            @"oAuthClientId": self.oAuthClientId,
            @"oAuthSecret": self.oAuthSecret,
            @"particleUserName": self.particleUserName,
            @"particlePassword": self.particlePassword,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
